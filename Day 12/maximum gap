from functools import reduce
class Solution(object):
        def maximumGap(self, nums):
            if len(nums) == 1:
                return 0
            
            sorted_array = self.radix_sort(nums)
            max_gap = self.maximum_Gap(sorted_array)
            return max_gap
            
                
        def radix_sort(self, nums):
            num_digits = len(str(max(nums)))
            A = nums 
            for i in range(num_digits):
                B = [[] for _ in range(10)]
                for num in A:
                    bucket = (num // (10 ** i)) % 10
                    B[bucket].append(num)
                A = reduce(lambda x, y: x+y, B)
                
            return A
            
                
        def maximum_Gap(self, sorted_array):
            max_gap = -float('inf')
            for i in range(1, len(sorted_array)):
                if sorted_array[i] - sorted_array[i-1] >= max_gap:
                    max_gap = sorted_array[i] - sorted_array[i-1]
            
            return max_gap
